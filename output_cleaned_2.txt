CS116-04 OBJECT-ORIENTED PROGRAMMING II - SPRING 2024 Instructor Dr. Michael Choi choiy@iit.edu Office Hours Wed 1330-1430        SB115B or Online Google Meet (adv appointment is required and link will be shared) Lecture Wed 1700-1840 - SB 111 Lab (L07/L08) Wed 1850-1940 - SB 112E for L07, SB112J (new change) for L08   lead by your TA TAs (office hours) Lab 07 Nate Beasley nbeasley@hawk.iit.edu T 5 – 6 PM online meeting (link will be shared) Lab 08 John Chmura jchmura@hawk.iit.edu W 740 – 840 PM (immediately after lab) Email Guideline   Use your @hawk.iit.edu account only to send.   University policy. * Include class number in the subject field. *** e.g. Subject “CS116-04 {question about assignment 1}” ** If the course number does not start in the email subject field, do not expect professor/TA to read/reply your message. ** *** Watch out email domain.  All IIT students use @hawk.iit.edu but all faculty/staff use @iit.edu. Your TA uses domain for students though. ** Blackboard announcement only sends to your @hawk.iit.edu account. Required Textbook Starting Out with Java Early Objects, Gaddis, ISBN 978-0134462011 This book will be used for both CS115 and CS116. OR (online/free) Programming Fundamentals Using JAVA, Second Edition, William McAllister and S. Jane Fritz, Mercury Learning © 2021 ISBN9781683926696 Available in "Books 24x7" through https//library.iit.edu/ (login to myIIT required) (prerequisite requirements from CS115) You should install Java SE Development Kit (Java 8) and can work in any development environment. Eclipse IDE (Eclipse IDE for Java Developers) is the main programming development environment.  You still can use Notepad++ for your own practice and Eclipse IDE is available in the OTS Labs in classroom buildings. Instructions for downloading and installing Java, Notepad++, and Eclipse. For additional Java installation and Eclipse development environment help, see Books 24x7, Java All-In-One Desk Reference For Dummies, Book I, Chapter 2 - Installing and Using Java Tools and Book I, Chapter 4 - Using Eclipse. Good Eclipse Tutorial  Using Notepad++ Tutorial  Using Eclipse Tutorial See the Blackboard for all lecture handouts, labs, quizzes, and the project. You have view and download access to everything in there. Catalog Description Introduces more advanced elements of object-oriented programming, including dynamic data structures, recursion, searching and sorting, and advanced object-oriented programming techniques. For students in CS and CS-related degree programs. (2-1-2) CS116 Course Outcomes Students should be able to • Analyze and explain the behavior of simple programs involving the following fundamental programming constructs assignment, I/O (including file I/O), selection, iteration, methods. • Write a program that uses each of the following fundamental programming constructs assignment, I/O (including file I/O), selection, iteration, methods. • Break a problem into logical pieces that can be solved (programmed) independently. • Develop, and analyze, algorithms for solving simple problems. • Use a suitable programming language, and development environment, to implement, test, and debug algorithms for solving simple problems. • Write programs that use each of the following data structures (and describe how they are represented in memory) strings, arrays. • Explain the basics of the concept of recursion. • Write, test, and debug simple recursive functions and procedures. • Explain and apply object-oriented design and testing involving the following concepts data abstraction, encapsulation, information hiding, inheritance, polymorphism. • Use a development environment to design, code, test, and debug simple programs, including multi-file source projects, in an object-oriented programming language. • Implement basic error handling. • Solve problems by creating and using sequential search, binary search, and quadratic sorting algorithms (selection, insertion) • Determine the time complexity of simple algorithms. • Apply appropriate problem-solving strategies. • Use APIs (Application Programmer Interfaces) and design/program APIs. Lectures Attendance is required at all lectures. To earn Lecture Participation points, students are expected to be prepared and to actively participate in class activities, either by asking or answering questions, or when called on their assigned day for participation. Attendance check (physical) will happen randomly.  Some lectures will be hands-on work, ungraded, in teams. In case of illness or emergency, you must contact the instructor before the lecture for an excused absence. Laboratories In-person attendance is required at all labs, and working with a partner is suggested. Labs are always due at the end of lab the following week.  Lab answer keys will be shared following the due date of the lab. The labs are designed to assist you in developing a more concrete understanding of the concepts introduced in the lecture. They also serve as a springboard for the programming project that you create later in the semester. They are not intended to produce a high-pressure environment. Grading policy Labs     25% Exam1 25% Exam2 30% Project 10% Quizzes 5% Attendance 5% (no attendance -1% deduct per time) A ≥ 90 80 ≤ B < 90 70 ≤ C < 80 60 ≤ D < 70 E < 60 No late work, no extra credit. In-person attendance is required at all lectures and labs. In case of illness or emergency, you must contact instructor/TA before the class/lab period for an excused absence. Students with unexcused absences that are close to a letter grade boundary will receive the lower grade.  Students with no absence that are close to a letter grade (less than 1% close) boundary may get bumped up. Ethics Any behavior on any homework, lab, project or exam that could be considered copying or cheating will result in an immediate zero on the assignment for all parties involved and will be reported to academichonesty@iit.edu.  Using programming codes from the Internet (online material) is also considered academic cheating.  All works must be done by your own brain.  All electronic devices are prohibited during exams. See the IIT Code of Academic Honesty, https//web.iit.edu/student-affairs/handbook/fine-print/code-academic-honesty Reasonable accommodation will be made for students with documented disabilities. In order to receive accommodations, students must obtain a letter of accommodation from the Center for Disability Resources (CDR) located at 3424 S. State Street - 1C3-2, 312 567.5744 or disabilities@iit.edu Illinois Tech’s Sexual Harassment and Discrimination Information Illinois Tech prohibits all sexual harassment, sexual misconduct, and gender discrimination by any member of our community. This includes harassment among students, staff, or faculty. Sexual harassment of a student by a faculty member or sexual harassment of an employee by a supervisor is particularly serious. Such conduct may easily create an intimidating, hostile, or offensive environment. Illinois Tech encourages anyone experiencing sexual harassment or sexual misconduct to speak with the Office of Title IX Compliance for information on support options and the resolution process. You can report sexual harassment electronically at iit.edu/incidentreport, which may be completed anonymously. You may additionally report by contacting the Title IX Coordinator, Virginia Foster at foster@iit.edu or the Deputy Title IX Coordinator at eespeland@iit.edu. For confidential support, you may reach Illinois Tech’s Confidential Advisor at (773) 907-1062. You can also contact a licensed practitioner in Illinois Tech’s Student Health and Wellness Center at student.health@iit.edu or (312)567-7550. For a comprehensive list of resources regarding counseling services, medical assistance, legal assistance and visa and immigration services, you can visit the Office of Title IX Compliance website at https//www.iit.edu/title-ix/resources. Communication is critical to the success and satisfaction of the learning experience. Tentative schedule (adjustable time to time) Week Wednesday (lecture) Lab 1 - 1/10 READ – M1. Introduction to programming Lab 01 due week 2 Wed 2 - 1/17 READ – M2. Java Basics, Lab 02 due week 3 Wed 3 - 1/24 READ – M3. Using Classes Lab 03 due week 5 Wed 4 - 1/31 READ – M4. Selections Lab 3 Q&A or no lab 5 - 2/7 READ – M5. Loops Lab 04 due week 6 Wed 6 - 2/14 READ – M6. Defining User Classes Lab 05 due week 6 Wed 7 - 2/21 READ – M7. Arrays Lab 06 due week 9 Wed 8 - 2/28 Exam #1 Lab 6 Q&A or No lab 9 - 3/6 M8. Multidimensional Arrays Lab 07 due week 10 Wed (after spring break) Project description 3/11 - 16 Spring Break No class, No lab 10 - 3/20 M9. Inheritance Lab 07 due 11 - 3/27 M9. Polymorphism Work on Project Design 12 - 4/3 M10. Exceptions and File I/O Work on Project Design 13 - 4/10 M10. Exceptions and File I/O Work on Project Design 14 - 4/17 M11. Recursions Work on Project Design 15 - 4/24 Exam #2 Part 1 (General Questions) Exam #2 Part 2 (coding for extended hours) Final’s Week Project due in Blackboard before final week starts